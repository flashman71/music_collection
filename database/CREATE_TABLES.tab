/* Drop and create tables and views
   Views will be used for accessing the data
   No public synonyms are used, all access is using schema owner
   Schema owner MUSIC_APP must be created manually prior to executing the db install script
*/

SET SERVEROUTPUT ON SIZE 100000
DECLARE
  V_NO_TABLE_FOUND_EXC     EXCEPTION;
  PRAGMA EXCEPTION_INIT(V_NO_TABLE_FOUND_EXC, -942);
BEGIN
  EXECUTE IMMEDIATE('DROP TABLE MUSIC_APP.APP_MESSAGES_$T');
  EXECUTE IMMEDIATE('DROP TABLE MUSIC_APP.ARTISTS_$T');
  EXECUTE IMMEDIATE('DROP TABLE MUSIC_APP.ALBUMS_$T');
  EXECUTE IMMEDIATE('DROP TABLE MUSIC_APP.TRACKS_$T');
EXCEPTION
  WHEN V_NO_TABLE_FOUND_EXC THEN
   DBMS_OUTPUT.PUT_LINE('Table does not exist...continuing');
  WHEN OTHERS THEN
   DBMS_OUTPUT.PUT_LINE('OTHERS while dropping tables:  ['||SUBSTR(SQLERRM,1,200)||']');
END;
/

/*  Messages table
     This is used to log exceptions and information from the procedures
*/
CREATE TABLE MUSIC_APP.APP_MESSAGES_$T
(
 APP_NAME   VARCHAR2(100)   NOT NULL,
 MESSAGE    VARCHAR2(4000)  NOT NULL,
 CREATED    DATE
)
/

/* View to represent MUSIC_APP.APP_MESSAGES_$T table */
CREATE OR REPLACE VIEW MUSIC_APP.APP_MESSAGES AS
SELECT APP_NAME,
       MESSAGE,
       CREATED
FROM   MUSIC_APP.APP_MESSAGES_$T;

/*  Grants for APP_MESSAGES table */
GRANT SELECT,INSERT ON MUSIC_APP.APP_MESSAGES TO MUSIC_COLL_RO;
GRANT SELECT,INSERT,UPDATE ON MUSIC_APP.APP_MESSAGES TO MUSIC_COLL_RW;
GRANT SELECT,INSERT,UPDATE,DELETE ON MUSIC_APP.APP_MESSAGES TO MUSIC_COLL_SA;

/* Artists table
    ID is generated by the system
    NAME and MBID --these are extracted from the JSON returned from the last.fm web service
    Remaining columsn are for auditing
*/
CREATE TABLE MUSIC_APP.ARTISTS_$T
(
 ID            NUMBER GENERATED ALWAYS AS IDENTITY,
 NAME          VARCHAR2(100)  NOT NULL,
 MBID          VARCHAR2(100),
 DATE_CREATED  DATE           NOT NULL,
 APP_CREATED   VARCHAR2(50)   NOT NULL,
 DATE_UPDATED  DATE,
 APP_UPDATED   VARCHAR2(50)
)
/

/* View to represent MUSIC_APP.ARTISTS_$T table */
CREATE OR REPLACE VIEW MUSIC_APP.ARTISTS AS
SELECT ID,
       NAME,
       MBID,
       DATE_CREATED,
       APP_CREATED,
       DATE_UPDATED,
       APP_UPDATED 
FROM   MUSIC_APP.ARTISTS_$T;

/* Grants for ARTISTS table */
GRANT SELECT ON MUSIC_APP.ARTISTS TO MUSIC_COLL_RO;
GRANT SELECT,INSERT,UPDATE ON MUSIC_APP.ARTISTS TO MUSIC_COLL_RW;
GRANT SELECT,INSERT,UPDATE,DELETE ON MUSIC_APP.ARTISTS TO MUSIC_COLL_SA;

/* Albums table
    ID is generated by the system
    ARTIST_ID --this is provided from the ARTISTS table
    ALBUM_NAME --this is extracted from the JSON returned from the last.fm web service
    Remaining columsn are for auditing
*/
CREATE TABLE MUSIC_APP.ALBUMS_$T
(
 ID            NUMBER GENERATED ALWAYS AS IDENTITY,
 ALBUM_NAME    VARCHAR2(100)  NOT NULL,
 ARTIST_ID     NUMBER         NOT NULL,
 DATE_CREATED  DATE           NOT NULL,
 APP_CREATED   VARCHAR2(50)   NOT NULL,
 DATE_UPDATED  DATE,
 APP_UPDATED   VARCHAR2(50)
)
/

/* View to represent MUSIC_APP.ALBUMS_$T table */
CREATE OR REPLACE VIEW MUSIC_APP.ALBUMS AS
SELECT ID,
       ALBUM_NAME,
       ARTIST_ID,
       DATE_CREATED,
       APP_CREATED,
       DATE_UPDATED,
       APP_UPDATED
FROM   MUSIC_APP.ALBUMS_$T;

/* Grants for ALBUMS table */
GRANT SELECT ON MUSIC_APP.ALBUMS TO MUSIC_COLL_RO;
GRANT SELECT,INSERT,UPDATE ON MUSIC_APP.ALBUMS TO MUSIC_COLL_RW;
GRANT SELECT,INSERT,UPDATE,DELETE ON MUSIC_APP.ALBUMS TO MUSIC_COLL_SA;

/* Tracks table
    ID is generated by the system
    ALBUM_ID --this is provided from the ALBUMS table
    TRACK_NAME --this is extracted from the JSON returned from the last.fm web service
    Remaining columsn are for auditing
*/
CREATE TABLE MUSIC_APP.TRACKS_$T
(
 ID            NUMBER GENERATED ALWAYS AS IDENTITY,
 TRACK_NAME    VARCHAR2(150) NOT NULL,
 ALBUM_ID      NUMBER        NOT NULL,
 DATE_CREATED  DATE          NOT NULL,
 APP_CREATED   VARCHAR2(50)  NOT NULL,
 DATE_UPDATED  DATE,
 APP_UPDATED   VARCHAR2(50)
)
/

/* View to represent MUSIC_APP.TRACKS_$T table */
CREATE OR REPLACE VIEW MUSIC_APP.TRACKS AS
SELECT ID,
       TRACK_NAME,
       ALBUM_ID,
       DATE_CREATED,
       APP_CREATED,
       DATE_UPDATED,
       APP_UPDATED
FROM   MUSIC_APP.TRACKS_$T;

/* Grants for TRACKS table */
GRANT SELECT ON MUSIC_APP.TRACKS TO MUSIC_COLL_RO;
GRANT SELECT,INSERT,UPDATE ON MUSIC_APP.TRACKS TO MUSIC_COLL_RW;
GRANT SELECT,INSERT,UPDATE,DELETE ON MUSIC_APP.TRACKS TO MUSIC_COLL_SA;
